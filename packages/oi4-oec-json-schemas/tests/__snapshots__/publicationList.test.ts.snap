// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`publicationList schema (0) match fails for invalid publicationList -> empty: empty 1`] = `
"expect(received).toMatchSchema(schema)

received
  must have required property 'Resource'
    Path:     PublicationList.schema.json#/required
  must have required property 'DataSetWriterId'
    Path:     PublicationList.schema.json#/required
  must have required property 'Source'
    Path:     PublicationList.schema.json#/required
"
`;

exports[`publicationList schema (1) match fails for invalid publicationList -> publicationList with unknown resource: publicationList with unknown resource 1`] = `
"expect(received).toMatchSchema(schema)

received
  /Resource must be equal to one of the allowed values
    Expected: [\\"MAM\\",\\"Health\\",\\"Config\\",\\"License\\",\\"LicenseText\\",\\"RtLicense\\",\\"Data\\",\\"Metadata\\",\\"Event\\",\\"Profile\\",\\"PublicationList\\",\\"SubscriptionList\\",\\"ReferenceDesignation\\",\\"Interfaces\\",\\"FileUpload\\",\\"FileDownload\\",\\"FirmwareUpdate\\",\\"Blink\\",\\"NewDataSetWriterId\\"]
    Received: <string> unknown
    Path:     PublicationList.schema.jsonconstants/resources.schema.json/enum
"
`;

exports[`publicationList schema (2) match fails for invalid publicationList -> publicationList with missing Resource: publicationList with missing Resource 1`] = `
"expect(received).toMatchSchema(schema)

received
  must have required property 'Resource'
    Path:     PublicationList.schema.json#/required
"
`;

exports[`publicationList schema (3) match fails for invalid publicationList -> publicationList with missing DataSetWriterId: publicationList with missing DataSetWriterId 1`] = `
"expect(received).toMatchSchema(schema)

received
  must have required property 'DataSetWriterId'
    Path:     PublicationList.schema.json#/required
"
`;

exports[`publicationList schema (4) match fails for invalid publicationList -> publicationList with missing Source: publicationList with missing Source 1`] = `
"expect(received).toMatchSchema(schema)

received
  must have required property 'Source'
    Path:     PublicationList.schema.json#/required
"
`;

exports[`publicationList schema (5) match fails for invalid publicationList -> publicationList with invalid Source: publicationList with invalid Source 1`] = `
"expect(received).toMatchSchema(schema)

received
  /Source must match pattern \\"^(([a-z0-9-]+\\\\.)*([a-z0-9-]*)(?:/[^/\`\\\\^
]+){3})$\\"
    Received: <string> provider.com
    Path:     PublicationList.schema.jsonOi4Identifier.schema.json/pattern
"
`;
