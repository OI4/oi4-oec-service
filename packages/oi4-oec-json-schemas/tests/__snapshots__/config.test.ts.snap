// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`config schema (0) match fails for invalid config -> empty: empty 1`] = `
"expect(received).toMatchSchema(schema)

received
  must NOT have fewer than 1 properties
    Path:     ConfigPublish.schema.json#/minProperties
"
`;

exports[`config schema (1) match fails for invalid config -> Name missing in network1, group Name missing for password: Name missing in network1, group Name missing for password 1`] = `
"expect(received).toMatchSchema(schema)

received
  /network1 must have required property 'Name'
    Received: <object> {\\"ip\\":{\\"Type\\":\\"string\\"},\\"snm\\":{\\"Name\\":{\\"Locale\\":\\"de-DE\\",\\"Text\\":\\"Subnetzmaske\\"},\\"Type\\":\\"string\\"}}
    Path:     ConfigPublish.schema.json#/required
  /network1/ip must have required property 'Name'
    Received: <object> {\\"Type\\":\\"string\\"}
    Path:     ConfigPublish.schema.json#/required
  /network1/ip must have required property 'Value'
    Received: <object> {\\"Type\\":\\"string\\"}
    Path:     ConfigPublish.schema.json#/required
  /network1/ip/Type must be equal to one of the allowed values
    Expected: [\\"Boolean\\",\\"ByteString\\",\\"DateTime\\",\\"Number\\",\\"String\\"]
    Received: <string> string
    Path:     ConfigPublish.schema.json#/properties/Type/enum
  /network1/snm must have required property 'Value'
    Received: <object> {\\"Name\\":{\\"Locale\\":\\"de-DE\\",\\"Text\\":\\"Subnetzmaske\\"},\\"Type\\":\\"string\\"}
    Path:     ConfigPublish.schema.json#/required
  /network1/snm/Type must be equal to one of the allowed values
    Expected: [\\"Boolean\\",\\"ByteString\\",\\"DateTime\\",\\"Number\\",\\"String\\"]
    Received: <string> string
    Path:     ConfigPublish.schema.json#/properties/Type/enum
  /network2/ip must have required property 'Value'
    Received: <object> {\\"Name\\":{\\"Locale\\":\\"de-DE\\",\\"Text\\":\\"IP Adresse\\"},\\"Type\\":\\"string\\"}
    Path:     ConfigPublish.schema.json#/required
  /network2/ip/Type must be equal to one of the allowed values
    Expected: [\\"Boolean\\",\\"ByteString\\",\\"DateTime\\",\\"Number\\",\\"String\\"]
    Received: <string> string
    Path:     ConfigPublish.schema.json#/properties/Type/enum
  /network2/snm must have required property 'Value'
    Received: <object> {\\"Name\\":{\\"Locale\\":\\"de-DE\\",\\"Text\\":\\"Subnetzmaske\\"},\\"Type\\":\\"string\\"}
    Path:     ConfigPublish.schema.json#/required
  /network2/snm/Type must be equal to one of the allowed values
    Expected: [\\"Boolean\\",\\"ByteString\\",\\"DateTime\\",\\"Number\\",\\"String\\"]
    Received: <string> string
    Path:     ConfigPublish.schema.json#/properties/Type/enum
  /password/Type must be object
    Received: <string> string
    Path:     ConfigPublish.schema.json#/type
"
`;

exports[`config schema (2) match fails for invalid config -> only Name provided: only Name provided 1`] = `
"expect(received).toMatchSchema(schema)

received
  /network1 must NOT have fewer than 2 properties
    Received: <object> {\\"Name\\":{\\"Locale\\":\\"de-DE\\",\\"Text\\":\\"Subnetzmaske\\"}}
    Path:     ConfigPublish.schema.json#/minProperties
"
`;

exports[`config schema (3) match fails for invalid config -> only Description provided: only Description provided 1`] = `
"expect(received).toMatchSchema(schema)

received
  /network1 must NOT have fewer than 2 properties
    Received: <object> {\\"Description\\":{\\"Locale\\":\\"de-DE\\",\\"Text\\":\\"Subnetzmaske\\"}}
    Path:     ConfigPublish.schema.json#/minProperties
  /network1 must have required property 'Name'
    Received: <object> {\\"Description\\":{\\"Locale\\":\\"de-DE\\",\\"Text\\":\\"Subnetzmaske\\"}}
    Path:     ConfigPublish.schema.json#/required
"
`;

exports[`config schema (4) match fails for invalid config -> group Name starts with invalid character: group Name starts with invalid character 1`] = `
"expect(received).toMatchSchema(schema)

received
  must NOT have additional properties, but found '.network1'
    Expected: <boolean> false
    Path:     ConfigPublish.schema.json#/additionalProperties
  must NOT have additional properties, but found '-network1'
    Expected: <boolean> false
    Path:     ConfigPublish.schema.json#/additionalProperties
  must NOT have additional properties, but found '#network1'
    Expected: <boolean> false
    Path:     ConfigPublish.schema.json#/additionalProperties
  must NOT have additional properties, but found '%network1'
    Expected: <boolean> false
    Path:     ConfigPublish.schema.json#/additionalProperties
  must NOT have additional properties, but found '$network1'
    Expected: <boolean> false
    Path:     ConfigPublish.schema.json#/additionalProperties
"
`;

exports[`config schema (6) match fails for invalid config -> group Name contains with invalid character: group Name contains with invalid character 1`] = `
"expect(received).toMatchSchema(schema)

received
  must NOT have additional properties, but found 'ip#'
    Expected: <boolean> false
    Path:     ConfigPublish.schema.json#/additionalProperties
  must NOT have additional properties, but found 'snm%'
    Expected: <boolean> false
    Path:     ConfigPublish.schema.json#/additionalProperties
  must NOT have additional properties, but found 'foo$'
    Expected: <boolean> false
    Path:     ConfigPublish.schema.json#/additionalProperties
  must NOT have additional properties, but found 'bar&'
    Expected: <boolean> false
    Path:     ConfigPublish.schema.json#/additionalProperties
  must NOT have additional properties, but found 'bar:'
    Expected: <boolean> false
    Path:     ConfigPublish.schema.json#/additionalProperties
  must NOT have additional properties, but found 'bar§'
    Expected: <boolean> false
    Path:     ConfigPublish.schema.json#/additionalProperties
  must NOT have additional properties, but found 'bar!'
    Expected: <boolean> false
    Path:     ConfigPublish.schema.json#/additionalProperties
  must NOT have additional properties, but found 'bar?'
    Expected: <boolean> false
    Path:     ConfigPublish.schema.json#/additionalProperties
  must NOT have additional properties, but found 'bar='
    Expected: <boolean> false
    Path:     ConfigPublish.schema.json#/additionalProperties
  must NOT have additional properties, but found 'bar('
    Expected: <boolean> false
    Path:     ConfigPublish.schema.json#/additionalProperties
  must NOT have additional properties, but found 'bar)'
    Expected: <boolean> false
    Path:     ConfigPublish.schema.json#/additionalProperties
  must NOT have additional properties, but found 'bar<'
    Expected: <boolean> false
    Path:     ConfigPublish.schema.json#/additionalProperties
  must NOT have additional properties, but found 'bar>'
    Expected: <boolean> false
    Path:     ConfigPublish.schema.json#/additionalProperties
  must NOT have additional properties, but found 'bar{'
    Expected: <boolean> false
    Path:     ConfigPublish.schema.json#/additionalProperties
  must NOT have additional properties, but found 'bar}'
    Expected: <boolean> false
    Path:     ConfigPublish.schema.json#/additionalProperties
  must NOT have additional properties, but found 'bar/'
    Expected: <boolean> false
    Path:     ConfigPublish.schema.json#/additionalProperties
  must NOT have additional properties, but found 'bar\\"'
    Expected: <boolean> false
    Path:     ConfigPublish.schema.json#/additionalProperties
  must NOT have additional properties, but found 'bar''
    Expected: <boolean> false
    Path:     ConfigPublish.schema.json#/additionalProperties
  must NOT have additional properties, but found 'bar+'
    Expected: <boolean> false
    Path:     ConfigPublish.schema.json#/additionalProperties
  must NOT have additional properties, but found 'bar*'
    Expected: <boolean> false
    Path:     ConfigPublish.schema.json#/additionalProperties
  must NOT have additional properties, but found 'bar@'
    Expected: <boolean> false
    Path:     ConfigPublish.schema.json#/additionalProperties
  must NOT have additional properties, but found 'bar°'
    Expected: <boolean> false
    Path:     ConfigPublish.schema.json#/additionalProperties
  must NOT have additional properties, but found 'barß'
    Expected: <boolean> false
    Path:     ConfigPublish.schema.json#/additionalProperties
  must NOT have additional properties, but found 'barü'
    Expected: <boolean> false
    Path:     ConfigPublish.schema.json#/additionalProperties
  must NOT have additional properties, but found 'barä'
    Expected: <boolean> false
    Path:     ConfigPublish.schema.json#/additionalProperties
  must NOT have additional properties, but found 'barö'
    Expected: <boolean> false
    Path:     ConfigPublish.schema.json#/additionalProperties
"
`;

exports[`config schema (7) match fails for invalid config -> config Name contains with invalid character: config Name contains with invalid character 1`] = `
"expect(received).toMatchSchema(schema)

received
  /network1/bar[ must have required property 'Type'
    Received: <object> {\\"Name\\":{\\"Locale\\":\\"en-UK\\",\\"Text\\":\\"test\\"},\\"Description\\":{\\"Locale\\":\\"de-DE\\",\\"Text\\":\\"Subnetzmaske\\"}}
    Path:     ConfigPublish.schema.json#/required
  /network1/bar[ must have required property 'Value'
    Received: <object> {\\"Name\\":{\\"Locale\\":\\"en-UK\\",\\"Text\\":\\"test\\"},\\"Description\\":{\\"Locale\\":\\"de-DE\\",\\"Text\\":\\"Subnetzmaske\\"}}
    Path:     ConfigPublish.schema.json#/required
  /network1/bar] must have required property 'Type'
    Received: <object> {\\"Name\\":{\\"Locale\\":\\"en-UK\\",\\"Text\\":\\"test\\"},\\"Description\\":{\\"Locale\\":\\"de-DE\\",\\"Text\\":\\"Subnetzmaske\\"}}
    Path:     ConfigPublish.schema.json#/required
  /network1/bar] must have required property 'Value'
    Received: <object> {\\"Name\\":{\\"Locale\\":\\"en-UK\\",\\"Text\\":\\"test\\"},\\"Description\\":{\\"Locale\\":\\"de-DE\\",\\"Text\\":\\"Subnetzmaske\\"}}
    Path:     ConfigPublish.schema.json#/required
  /network1/bar\\\\ must have required property 'Type'
    Received: <object> {\\"Name\\":{\\"Locale\\":\\"en-UK\\",\\"Text\\":\\"test\\"},\\"Description\\":{\\"Locale\\":\\"de-DE\\",\\"Text\\":\\"Subnetzmaske\\"}}
    Path:     ConfigPublish.schema.json#/required
  /network1/bar\\\\ must have required property 'Value'
    Received: <object> {\\"Name\\":{\\"Locale\\":\\"en-UK\\",\\"Text\\":\\"test\\"},\\"Description\\":{\\"Locale\\":\\"de-DE\\",\\"Text\\":\\"Subnetzmaske\\"}}
    Path:     ConfigPublish.schema.json#/required
"
`;

exports[`config schema (8) match fails for invalid config -> Name and Description with suffix: Name and Description with suffix 1`] = `
"expect(received).toMatchSchema(schema)

received
  /network1 must have required property 'Name'
    Received: <object> {\\"Name-1\\":{\\"Locale\\":\\"de-DE\\",\\"Text\\":\\"Subnetzmaske\\"},\\"Description-1\\":{\\"Locale\\":\\"de-DE\\",\\"Text\\":\\"Mein toller Text\\"}}
    Path:     ConfigPublish.schema.json#/required
"
`;

exports[`config schema (9) match fails for invalid config -> complex example with different errors: complex example with different errors 1`] = `
"expect(received).toMatchSchema(schema)

received
  /device1/protocol/Validation/Min must be number
    Received: <empty string>
    Path:     ConfigPublish.schema.json#/properties/Validation/properties/Min/type
  /device1/protocol/Validation/Max must be number
    Received: <empty string>
    Path:     ConfigPublish.schema.json#/properties/Validation/properties/Max/type
  /device1/Unit/Validation/Values/5 must be string
    Received: <object> {\\"a\\":\\"b\\"}
    Path:     ConfigPublish.schema.json#/properties/Validation/properties/Values/items/type
  /device1/Unit/Validation/Values/6 must be string
    Received: <number> 2
    Path:     ConfigPublish.schema.json#/properties/Validation/properties/Values/items/type
  /device1/Unit/Validation/Values/7 must be string
    Received: <number> 1
    Path:     ConfigPublish.schema.json#/properties/Validation/properties/Values/items/type
  /general/date-time/Type must be equal to one of the allowed values
    Expected: [\\"Boolean\\",\\"ByteString\\",\\"DateTime\\",\\"Number\\",\\"String\\"]
    Received: <string> Datetime
    Path:     ConfigPublish.schema.json#/properties/Type/enum
"
`;
