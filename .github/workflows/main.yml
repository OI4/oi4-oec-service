name: release

env:
  CI: true
on:
  push:
    branches:
      - main
    tags:
      - "!*"
jobs:
  release:
    name: Setup
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
          registry-url: 'https://npm.pkg.github.com'
      - name: install
        run: |
          export PACKAGES_AUTH_TOKEN=${{ secrets.OI4_REGISTRY_GITHUB_ACTION }}
          npm install
      - name: test
        run: npm test
      # Publish to npm if this version is not published
      - name: publish
        run: |
          npx can-npm-publish --verbose && npm publish || echo "Does not publish"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.OI4_REGISTRY_GITHUB_ACTION }}
      # Push tag to GitHub if package.json version's tag is not tagged
      - name: package-version
        run: node -p -e '`PACKAGE_VERSION=${require("./package.json").version}`' >> $GITHUB_ENV
      # Create GitHub Repo tag
      - name: package-version-to-git-tag
        uses: pkgdeps/git-tag-action@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          github_repo: ${{ github.repository }}
          version: ${{ env.PACKAGE_VERSION }}
          git_commit_sha: ${{ github.sha }}
          git_tag_prefix: "v"
      # Generate the changelog based on the CHANGELOG.md
      - name: Generate Changelog
        run: echo "# Good things have arrived" > CHANGELOG.md
      # Create GitHub Repo release
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: CHANGELOG.txt
          tag_name: v${{ env.PACKAGE_VERSION }}
